Using ''matrix_divided''
--------------------------

Makes sure the matrix parameter is made of lists
Makes sure those lists have the same length
Makes sure the items of the lists are type int or float
Makes sure div parameter is not 0
Makes sure div is an integer or a float type

First import the method

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

Basic usage:
	>>> matrix = [[1, 2, 3,], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Non int or float inputs in matrix:
	>>> matrix = [['hi', 'ko', 'ki'], [1, 2, 3]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Zero div input:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Different list lengths in matrix:
	>>> matrix = [[1, 2, 3, 4], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Div that is a string:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, "hello"))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Negative variables in list:
	>>> matrix = [[1, 2, -3], [4, -5, -6]]
	>>> print(matrix_divided(matrix, 2))
	[[0.5, 1.0, -1.5], [2.0, -2.5, -3.0]]

empty matrix:
	>>> matrix = [[]]
	>>> print(matrix_divided(matrix, 2))
	[[]]

no input:
	>>> print(matrix_divided())
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
